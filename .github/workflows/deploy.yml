name: Deploy Portfolio to AWS ECS

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY_FRONTEND: portfolio-frontend
  ECR_REPOSITORY_BACKEND: portfolio-backend

  FORCE_SKIP_FRONTEND: "false" 
  FORCE_SKIP_BACKEND: "true" 
  FORCE_SKIP_DEPLOY: "true"

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set skip flags
        id: check-skip
        run: |
          # Set skip flags based on environment variables only
          echo "skip-frontend=${{ env.FORCE_SKIP_FRONTEND }}" >> $GITHUB_OUTPUT
          echo "skip-backend=${{ env.FORCE_SKIP_BACKEND }}" >> $GITHUB_OUTPUT
          echo "skip-deploy=${{ env.FORCE_SKIP_DEPLOY }}" >> $GITHUB_OUTPUT

          echo "Frontend skip: ${{ env.FORCE_SKIP_FRONTEND }}"
          echo "Backend skip: ${{ env.FORCE_SKIP_BACKEND }}"
          echo "Deploy skip: ${{ env.FORCE_SKIP_DEPLOY }}"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push frontend image
        if: steps.check-skip.outputs.skip-frontend == 'false'
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        working-directory: ./frontend
        run: |
          echo "Building frontend (not skipped)..."
          aws ecr describe-repositories --repository-names $ECR_REPOSITORY_FRONTEND 2>/dev/null || \
            aws ecr create-repository --repository-name $ECR_REPOSITORY_FRONTEND

          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY_FRONTEND:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY_FRONTEND:$IMAGE_TAG

      - name: Build moved to GitHub Pages
        if: steps.check-skip.outputs.skip-deploy == 'false'
        working-directory: ./frontend
        run: |
          echo "Building website..."
          npm ci
          npm run build

      - name: Build and push backend image
        if: steps.check-skip.outputs.skip-backend == 'false'
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        working-directory: ./backend
        run: |
          echo "Building backend (not skipped)..."
          aws ecr describe-repositories --repository-names $ECR_REPOSITORY_BACKEND 2>/dev/null || \
            aws ecr create-repository --repository-name $ECR_REPOSITORY_BACKEND

          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY_BACKEND:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY_BACKEND:$IMAGE_TAG

      - name: Build and Deploy to GitHub Pages
        if: steps.check-skip.outputs.skip-deploy == 'false'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./frontend/build
          cname: Oscario.com

      - name: Summary
        run: |
          echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Frontend: ${{ steps.check-skip.outputs.skip-frontend == 'true' && '⏭️ Skipped' || 'Built' }}" >> $GITHUB_STEP_SUMMARY
          echo "- Backend: ${{ steps.check-skip.outputs.skip-backend == 'true' && '⏭️ Skipped' || 'Built' }}" >> $GITHUB_STEP_SUMMARY
          echo "- Deploy: ${{ steps.check-skip.outputs.skip-deploy == 'true' && '⏭️ Skipped' || 'Deployed' }}" >> $GITHUB_STEP_SUMMARY
